######################################
# Author: Marijana Vujkovic
# Date: 05/2017
#
# target.rules
######################################

############################### Create targets to run several jobs (batches) at the same time

# to run the targets:
#
# cd /project/saleheenlab/snakemake
# source activate promis
# screen -dR mysession
# snakemake -j 300 --cluster-config config/cluster.yaml -c "bsub -V -l h_vmem={cluster.g_vmem} -l mem_free={cluster.mem_free} -l mem_free_l={cluster.m_mem_free} -pe smp {threads}" targetName
#

# create sample file
rule make_sample:
        input:
                [ expand("out/PROMIS/imputed/GWAS{cohort}/promis_gwas{cohort}.sample", cohort = range(1, 3)) ]


# snptest
rule make_snptest:
        input:
                [ expand("out/PROMIS/imputed/GWAS{cohort}/{pheno}/chr{interval}.out", cohort = range(1, 3), pheno = config['gwasPheno'], interval = ((lambda x, y: str(x) + "/promis_chr_" + str(x) + "_" + str((5 * y)) + "e6_" + str(5 * (y + 1)))(x, y) + "e6" for x in range(1, 22) for y in range(0, config['chrChunk'][x]))) ]

# snptest chunks
rule make_chunklist:
        input:
                [ expand("out/PROMIS/imputed/GWAS{cohort}/{pheno}/{pheno}_snptest_chunks_gwas{cohort}.txt", cohort = range(1, 3), pheno = config['gwasPheno']) ]

# merge chunks from snptest
rule make_merge_snptest:
        input:
                [ expand("out/PROMIS/imputed/summary/{pheno}/{pheno}_gwas{cohort}.snptest.out", cohort = range(1, 3), pheno = config['gwasPheno']) ]

# filter on MAF, HWE, and INFO
# requires -M 30860 (or job will fail)
rule filter_snps:
        input:
                [ expand("out/PROMIS/imputed/summary/{pheno}/{pheno}_gwas{cohort}.snptest.filtered.out", cohort = range(1, 3), pheno = config['gwasPheno']) ]

# create metal file
rule make_metal_file:
        input:
                [ expand("script/promis_{pheno}.metal", pheno = config['gwasPheno']) ]

# run metal
rule make_metal:
        input:
                [ expand("out/PROMIS/imputed/summary/{pheno}/promis_{pheno}.metal.1.TBL", pheno = config['gwasPheno']) ]


#
# 3. GWAS - REPORT
#

# manhattan and QQ plots for phenotype (PROMIS1, PROMIS2, and META)
rule make_report:
        input:
                [ expand("report/out/PROMIS_{pheno}_Summary.html", pheno = config['gwasPheno']) ]

# only PROMIS1
rule make_gwas1:
        input:
                [ expand("report/out/GWAS1_{pheno}_Summary.html", pheno = config['gwasPheno']) ]

#
# WES - EPACTS
#

rule make_wes_ped:
        input:
                "pheno/WEseq10.5kPhenoCov.ped"

rule make_wes_epacts_log:
        input:
                [ expand("out/PROMIS/WEseq/assoc/{pheno}/WESeq10.5K_{pheno}.single.b.score.epacts.gz", pheno = config['wesPhenoLog']) ]

rule make_wes_epacts_lin:
        input:
                [ expand("out/PROMIS/WEseq/assoc/{pheno}/WESeq10.5K_{pheno}.single.q.emmax.epacts.gz", pheno = config['wesPhenoLin']) ]
